# -*- coding: utf-8 -*-
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
import random as r
import requests
from bs4 import BeautifulSoup as bs
from const import TOKEN
import lxml
import logging
from dotenv import load_dotenv


invest_advices = ['<b>–í–∏—Ç—Ä–∞—á–∞–π—Ç–µ –º–µ–Ω—à–µ, –Ω—ñ–∂ –∑–∞—Ä–æ–±–ª—è—î—Ç–µ</b>\n–ù–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–º–µ–Ω—à—É–≤–∞—Ç–∏ –≤–∏—Ç—Ä–∞—Ç–∏ –¥–æ –º—ñ–Ω—ñ–º—É–º—É, –∞–ª–µ —Ä–æ–∑—É–º–Ω—ñ –≤–∏—Ç—Ä–∞—Ç–∏ –ø—Ä–∏–∑–≤–µ–¥—É—Ç—å –¥–æ —á—É–¥–æ–≤–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤.\n–í–∞–∂–ª–∏–≤–æ –∫—É–ø—É–≤–∞—Ç–∏ –ª–∏—à–µ —Ç–µ, —â–æ —Å–ø—Ä–∞–≤–¥—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω–µ, —Ç–∞ —ñ–≥–Ω–æ—Ä—É–≤–∞—Ç–∏ —Å–∫–æ—Ä–æ–º–∏–Ω—É—â—ñ –∑–∞–±–∞–≥–∞–Ω–∫–∏ –∫—É–ø–∏—Ç–∏ —â–æ—Å—å –Ω–µ–ø–æ—Ç—Ä—ñ–±–Ω–µ.\n–î—É–∂–µ –≤–∞–∂–ª–∏–≤–æ –ø—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Å–≤–æ—ó –≤–∏—Ç—Ä–∞—Ç–∏ —Ç–∞ –∑–º–µ–Ω—à–∏—Ç–∏ —ó—Ö.\n–ß–∞—Å—Ç–æ —á–∏–º–∞–ª–æ –≥—Ä–æ—à–µ–π —â–æ–º—ñ—Å—è—Ü—è –π–¥–µ –Ω–∞ —Ä–µ—á—ñ, —â–æ –º–æ–∂—É—Ç—å –≤–∏—è–≤–∏—Ç–∏—Å—è –∑–æ–≤—Å—ñ–º –Ω–µ–ø–æ—Ç—Ä—ñ–±–Ω–∏–º–∏',
                  "<b>–ó–∞–æ—â–∞–¥–∂—É–π—Ç–µ –Ω–µ–∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ä—ñ–≤–Ω—è –¥–æ—Ö–æ–¥—É</b>\n–Ü–¥–µ–∞–ª—å–Ω–∏–π –º–æ–º–µ–Ω—Ç, —â–æ–± –ø–æ—á–∞—Ç–∏ –∑–∞–æ—â–∞–¥–∂—É–≤–∞—Ç–∏ –≥—Ä–æ—à—ñ, ‚Äì —Ç—É—Ç —ñ –∑–∞—Ä–∞–∑.\n–¶–µ –º–æ–∂–Ω–∞ —Ä–æ–±–∏—Ç–∏, –Ω–∞–≤—ñ—Ç—å –æ—Ç—Ä–∏–º—É—é—á–∏ –º—ñ–Ω—ñ–º–∞–ª—å–Ω—É —á–∏ —Å–µ—Ä–µ–¥–Ω—é –∑–∞—Ä–ø–ª–∞—Ç—É, ‚Äì –≤—Å–µ –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∫–æ—à—Ç—ñ–≤, —â–æ –≤–∏–¥—ñ–ª—è—é—Ç—å—Å—è —è–∫ –Ω–∞–∫–æ–ø–∏—á–µ–Ω–Ω—è.\n–ù–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ –ø—Ä–∏–≤'—è–∑—É–≤–∞—Ç–∏—Å—è –¥–æ –ø–µ–≤–Ω–æ—ó —Å—É–º–∏, –≤–∞–∂–ª–∏–≤–æ, —â–æ–± —Ü–µ —Å—Ç–∞–ª–æ –∑–≤–∏—á–∫–æ—é.\n–ê —è–∫—â–æ –≤–∏ –∑–Ω–∞–π–¥–µ—Ç–µ –¥–æ–¥–∞—Ç–∫–æ–≤–µ –¥–∂–µ—Ä–µ–ª–æ –¥–æ—Ö–æ–¥—É, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ –æ–ø–∞–Ω—É—î—Ç–µ —Ç—Ä–µ–π–¥–∏–Ω–≥, –∑–µ–∫–æ–Ω–æ–º–ª–µ–Ω—ñ –∫–æ—à—Ç–∏ –º–æ–∂–Ω–∞ –ø–æ—Ç—Ä–∞–∫—Ç—É–≤–∞—Ç–∏ —è–∫ –Ω–∞–∫–æ–ø–∏—á–µ–Ω–Ω—è.",
                  "<b>–ú—ñ–Ω—ñ–º—ñ–∑—É–π—Ç–µ –±–æ—Ä–≥–∏</b>\n–ú–∞—é—á–∏ –±–æ—Ä–≥–∏, –≤–∞–∂–ª–∏–≤–æ –æ—Ä–≥–∞–Ω—ñ–∑—É–≤–∞—Ç–∏ —ó—Ö –ø–æ–≥–∞—à–µ–Ω–Ω—è –∑–∞ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–∞–º–∏.\n–°–ª—ñ–¥ —Ç–∞–∫–æ–∂ —É–Ω–∏–∫–∞—Ç–∏ –±–æ—Ä–≥—ñ–≤, —â–æ –ø–µ—Ä–µ–¥–±–∞—á–∞—é—Ç—å –≤–∏–ø–ª–∞—Ç—É –≤—ñ–¥—Å–æ—Ç–∫—ñ–≤.\n–Ø–∫—â–æ —î –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å, –Ω–µ –±–µ—Ä—ñ—Ç—å —É –±–æ—Ä–≥, –∞ —è–∫—â–æ —Ü–µ –≤–∂–µ —Å—Ç–∞–ª–æ—Å—è, –∑—Ä–æ–±—ñ—Ç—å —É—Å–µ –º–æ–∂–ª–∏–≤–µ, —â–æ–± —è–∫–Ω–∞–π—à–≤–∏–¥—à–µ –π–æ–≥–æ –ø–æ–≥–∞—Å–∏—Ç–∏.",
                  "<b>–ö–æ–Ω—Ç—Ä–æ–ª—é–π—Ç–µ —Å–≤–æ—ó –¥–æ—Ö–æ–¥–∏ —Ç–∞ –≤–∏—Ç—Ä–∞—Ç–∏</b>\n–©–µ –æ–¥–Ω–∞ –∫–æ—Ä–∏—Å–Ω–∞ –ø–æ—Ä–∞–¥–∞ –¥–ª—è —Ç–∏—Ö, —Ö—Ç–æ —Ö–æ—á–µ –±—É—Ç–∏ —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–æ –≥—Ä–∞–º–æ—Ç–Ω–∏–º.\n–õ—é–¥–∏, —â–æ –º–∞—é—Ç—å —Ü—é –Ω–∞–≤–∏—á–∫—É, —Ä–µ–∫–æ–º–µ–Ω–¥—É—é—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏ (–Ω–∞ —Å–º–∞—Ä—Ç—Ñ–æ–Ω—ñ –∞–±–æ –∫–æ–º–ø'—é—Ç–µ—Ä—ñ) —ñ–∑ –≤–µ–¥–µ–Ω–Ω—è –¥–æ–º–∞—à–Ω—å–æ—ó –±—É—Ö–≥–∞–ª—Ç–µ—Ä—ñ—ó.\n–¶–µ —Å–ø—Ä–æ—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª—å –∑–∞ –æ—Å–æ–±–∏—Å—Ç–∏–º–∏ —Ñ—ñ–Ω–∞–Ω—Å–∞–º–∏ —ñ –¥–∞—Å—Ç—å —Ä–æ–∑—É–º—ñ–Ω–Ω—è, —è–∫–µ —É –≤–∞—Å —Å–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è –¥–æ—Ö–æ–¥—ñ–≤/–≤–∏—Ç—Ä–∞—Ç —ñ –Ω–∞ —â–æ –π–¥—É—Ç—å –≥—Ä–æ—à—ñ.\n–í–∞–∂–ª–∏–≤–æ –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏ –∞–±—Å–æ–ª—é—Ç–Ω–æ –≤—Å—ñ –Ω–∞–¥—Ö–æ–¥–∂–µ–Ω–Ω—è –≥—Ä–æ—à–µ–π —Ç–∞ –≤–∏—Ç—Ä–∞—Ç–∏: —ñ —Ñ—ñ–∫—Å–æ–≤–∞–Ω—ñ, —ñ –≤–∏–ø–∞–¥–∫–æ–≤—ñ.\n–©–æ–º—ñ—Å—è—Ü—è –∞–Ω–∞–ª—ñ–∑—É–π—Ç–µ, –¥–µ –º–æ–∂–Ω–∞ –±—É–ª–æ —Å–∫–æ—Ä–æ—Ç–∏—Ç–∏ –≤–∏—Ç—Ä–∞—Ç–∏ —Ç–∞ –∑–∞–æ—â–∞–¥–∏—Ç–∏.",
                  "<b>–§—ñ–Ω–∞–Ω—Å–æ–≤–∞ –ø–æ–¥—É—à–∫–∞ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –≤ –∫–æ–∂–Ω–æ–≥–æ</b>\n–ö–æ–ª–∏ –º–∏ –º–∞—î–º–æ –∑–∞–æ—â–∞–¥–∂–µ–Ω–Ω—è, –º–∏ –≤—ñ–¥—á—É–≤–∞—î–º–æ —Å–µ–±–µ –±—ñ–ª—å—à –≤–ø–µ–≤–Ω–µ–Ω–∏–º–∏, —Å—Ç–∏–∫–∞—é—á–∏—Å—å –∑—ñ —Å–∫–ª–∞–¥–Ω–∏–º–∏ —Å–∏—Ç—É–∞—Ü—ñ—è–º–∏ –≤ –∂–∏—Ç—Ç—ñ.\n–í–∞–∂–ª–∏–≤–æ —â–æ–º—ñ—Å—è—Ü—è –≤—ñ–¥–∫–ª–∞–¥–∞—Ç–∏ —á–∞—Å—Ç–∏–Ω—É –ø—Ä–∏–±—É—Ç–∫—É –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–æ—ó –ø–æ–¥—É—à–∫–∏.\n–†–æ–∑–º—ñ—Ä —â–æ–º—ñ—Å—è—á–Ω–∏—Ö –∑–∞–æ—â–∞–¥–∂–µ–Ω—å –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –∑–∞—Ä–æ–±—ñ—Ç–∫—É, —Ü—ñ–ª–µ–π, —á–∞—Å—É —Ç–∞ —Å—É–º–∏, —è–∫—É –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –∑—ñ–±—Ä–∞—Ç–∏.\n–§—ñ–Ω–∞–Ω—Å–æ–≤–∞ –ø–æ–¥—É—à–∫–∞ —Ä–æ–∑–º—ñ—Ä–æ–º 3 - 6 –∑–∞—Ä–æ–±—ñ—Ç–Ω–∏—Ö –ø–ª–∞—Ç –≤–∂–µ –¥–∞—î –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –Ω–µ –±–æ—è—Ç–∏—Å—å –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è –∑ —Ä–æ–±–æ—Ç–∏.\n–ù–∞–¥–∞–ª—ñ –∑–∞–æ—â–∞–¥–∂–µ–Ω—ñ –≥—Ä–æ—à—ñ –º–æ–∂–Ω–∞ –≤–∏–≥—ñ–¥–Ω–æ —ñ–Ω–≤–µ—Å—Ç—É–≤–∞—Ç–∏, —â–æ–± –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –ø–∞—Å–∏–≤–Ω–∏–π –¥–æ—Ö—ñ–¥.",
                  '<b>–ö—É–ø—É—é—á–∏ —Ä–µ—á—ñ –≤ –∫—Ä–µ–¥–∏—Ç, –º–∏ –∑–º—É—à–µ–Ω—ñ –±—ñ–ª—å—à–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏</b>\n–ö—Ä—ñ–º —Ç–æ–≥–æ, –ª—é–¥–∏–Ω–∞ –∑ –±–æ—Ä–≥–∞–º–∏ –∑–∞–≤–∂–¥–∏ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –∑–æ–Ω—ñ —Ä–∏–∑–∏–∫—É, —Ç–æ–º—É —â–æ –Ω–µ–º–æ–∂–ª–∏–≤–æ –ø–µ—Ä–µ–¥–±–∞—á–∏—Ç–∏ –º–∞–π–±—É—Ç–Ω—î.\n–ù–µ–ø—Ä–∏—î–º–Ω–æ –æ–ø–∏–Ω–∏—Ç–∏—Å—å –≤ —Å–∏—Ç—É–∞—Ü—ñ—ó, –∫–æ–ª–∏ –ø–æ–ª–æ–≤–∏–Ω–∞ –∑–∞—Ä–æ–±–ª–µ–Ω–æ–≥–æ –¥–µ–∫—ñ–ª—å–∫–∞ —Ä–æ–∫—ñ–≤ –ø—ñ–¥—Ä—è–¥ –≤–∏—Ç—Ä–∞—á–∞—î—Ç—å—Å—è –Ω–∞ –≤—ñ–¥—Å–æ—Ç–∫–∏ –∑–∞ –∫—Ä–µ–¥–∏—Ç–æ–º.\n–ó–∞–≤–∂–¥–∏ —Å–ª—ñ–¥ –ø–æ—Ä—ñ–≤–Ω—é–≤–∞—Ç–∏ –ø–µ—Ä–µ–≤–∞–≥–∏ —Ç–∞ –Ω–µ–¥–æ–ª—ñ–∫–∏, –ø–µ—Ä—à –Ω—ñ–∂ –∑–≤–∞–∂–∏—Ç–∏—Å—å –ø–æ–∑–∏—á–∏—Ç–∏ –≥—Ä–æ—à—ñ –ø—ñ–¥ –≤—ñ–¥—Å–æ—Ç–∫–∏. –ö—Ä—ñ–º —Ç–æ–≥–æ, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –ø–æ—Ä—ñ–≤–Ω—é–≤–∞—Ç–∏ —Ä—ñ–∑–Ω—ñ –∫—Ä–µ–¥–∏—Ç–∏, —â–æ–± –Ω–µ –ø–µ—Ä–µ–ø–ª–∞—á—É–≤–∞—Ç–∏ –∑–∞–π–≤–æ–≥–æ.',
                  '<b>–ö–æ—Ä–∏—Å–Ω–æ–≥–æ –º–∞—î –±—É—Ç–∏ –±—ñ–ª—å—à–µ, –Ω—ñ–∂ –ø—Ä–∏—î–º–Ω–æ–≥–æ</b>\n–†–µ—á—ñ, —è–∫—ñ –ø—Ä–∏–Ω–æ—Å—è—Ç—å –Ω–∞–º –ø—Ä–∏–±—É—Ç–æ–∫ ‚Äî —Ü–µ –Ω–∞—à—ñ –∞–∫—Ç–∏–≤–∏, –π –Ω–∞–≤–ø–∞–∫–∏, –ø–∞—Å–∏–≤–∏ ‚Äî —Ü–µ –≤—Å–µ, —â–æ –ø–æ—Ç—Ä–µ–±—É—î –≤–∏—Ç—Ä–∞—Ç. –ê–≤—Ç–æ–º–æ–±—ñ–ª—å –¥–ª—è —Ç–∞–∫—Å–∏—Å—Ç–∞ ‚Äî —Ü–µ –π–æ–≥–æ –∞–∫—Ç–∏–≤, —Ç–æ–º—É —â–æ –∫–æ—Ä–∏—Å—Ç—É—é—á–∏—Å—å –Ω–∏–º –≤—ñ–Ω –∑–∞—Ä–æ–±–ª—è—î –≥—Ä–æ—à—ñ.\n–ê–ª–µ —è–∫—â–æ –∞–≤—Ç–æ –±—É–¥–µ —Å–ø–æ–∂–∏–≤–∞—Ç–∏ –∑–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ –ø–∞–ª—å–Ω–æ–≥–æ, –≤–∏—Ç—Ä–∞—Ç–∏ –ø–µ—Ä–µ–≤–∏—â–∞—Ç—å –¥–æ—Ö–æ–¥–∏, –π –≤—ñ–Ω –ø–µ—Ä–µ—Ç–≤–æ—Ä–∏—Ç—å—Å—è –≤ –ø–∞—Å–∏–≤.\n–ë—É–¥–∏–Ω–æ–∫, —è–∫–∏–π –∑–¥–∞—î—Ç—å—Å—è –≤ –æ—Ä–µ–Ω–¥—É ‚Äî —Ü–µ –∞–∫—Ç–∏–≤. –Ø–∫—â–æ –≤–∏—Ç—Ä–∞—Ç–∏ –Ω–∞ –π–æ–≥–æ —É—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–µ—Ä–µ–≤–∏—â—É—é—Ç—å –≤–∏–≥–æ–¥—É –≤—ñ–¥ –≤–æ–ª–æ–¥—ñ–Ω–Ω—è, —Ç–æ–¥—ñ –≤—ñ–Ω –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –Ω–∞ –ø–∞—Å–∏–≤. –¢–∞–∫, –º–∏ –º–æ–∂–µ–º–æ –≤–æ–ª–æ–¥—ñ—Ç–∏ –ø–∞—Å–∏–≤–∞–º–∏ ‚Äî –≤–ª–∞—Å–Ω–∏–º –±—É–¥–∏–Ω–∫–æ–º, –∞–≤—Ç–æ–º–æ–±—ñ–ª–µ–º, –º–æ—Ç–æ—Ü–∏–∫–ª–æ–º —Ç–∞ —ñ–Ω—à–∏–º–∏ –ø—Ä–∏—î–º–Ω–∏–º–∏ —Ä–µ—á–∞–º–∏. –ê–ª–µ —Å–ø–æ—á–∞—Ç–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—Ä–∏–¥–±–∞—Ç–∏ –∞–∫—Ç–∏–≤–∏, –¥–æ—Ö–æ–¥–∏ –≤—ñ–¥ —è–∫–∏—Ö –¥–æ–∑–≤–æ–ª—è—Ç—å –≤—Å–µ —Ü–µ –ø—Ä–∏–¥–±–∞—Ç–∏ –π –≥–æ–ª–æ–≤–Ω–µ ‚Äî —É—Ç—Ä–∏–º—É–≤–∞—Ç–∏.']


salary = 0
user_waste = {}


bot = Bot(TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())

START = '<b>–í—ñ—Ç–∞—é –≤–∞—Å —É FinanceBot!</b>\n–î–∞–Ω–∏–π –±–æ—Ç –±—É–≤ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –¥–ª—è —Ç–æ–≥–æ, —â–æ–± –∫–æ–∂–Ω–∞ –ª—é–¥–∏–Ω–∞ –º–æ–≥–ª–∞ –∫–æ–Ω—Ç—Ä–æ–ª—é–≤–∞—Ç–∏ —Å–≤–æ—ó —Ñ—ñ–Ω–∞–Ω—Å–∏ —Ç–∞ —Å—Ç–∞–ª–∞ —Ç—Ä–æ—à–∫–∏ –¥–æ—Å–≤—ñ–¥—á–µ–Ω–Ω—ñ—à–æ—é —É —Ü—ñ–π —Å—Ñ–µ—Ä—ñ.'

HELP = '–ß–∏–º —è –º–æ–∂—É –±—É—Ç–∏ –∫–æ—Ä–∏—Å–Ω–∏–º –¥–ª—è –≤–∞—Å?üßê'


kb_client = ReplyKeyboardMarkup(resize_keyboard=True)

button1 = KeyboardButton(text='üí∞–ö—É—Ä—Å –≤–∞–ª—é—Ç')
button2 = KeyboardButton(text='üíµ–†–æ–∑–ø–æ–¥—ñ–ª–µ–Ω–Ω—è –±—é–¥–∂–µ—Ç—É')
button3 = KeyboardButton(text='üí∏–§—ñ–Ω–∞–Ω—Å–æ–≤–∞ –ø–æ—Ä–∞–¥–∞')


kb_client.add(button1,button2,button3)


inline_menu1 = InlineKeyboardMarkup(row_width=2)
btn_mney = InlineKeyboardMarkup(text='USD', callback_data = 'btn_mney')
btn_mney2 = InlineKeyboardMarkup(text='EUR', callback_data = 'btn_mney2')
btn_mney3 = InlineKeyboardMarkup(text='BTC', callback_data = 'btn_mney3')


inline_menu2 = InlineKeyboardMarkup(row_width=2)
week_money = InlineKeyboardMarkup(text='–ë—é–¥–∂–µ—Ç –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å', callback_data = 'week_money')
daily_money= InlineKeyboardMarkup(text='–ë—é–¥–∂–µ—Ç –Ω–∞ –¥–µ–Ω—å', callback_data = 'daily_money')
change_money = InlineKeyboardMarkup(text='–ö–æ—Ä—Ä–µ–∫—Ç—É–≤–∞—Ç–∏ –±—é–¥–∂–µ—Ç', callback_data = 'chng_mney')
analyze_waste = InlineKeyboardMarkup(text='–î–æ–¥–∞—Ç–∏ –≤–∏—Ç—Ä–∞—Ç—É', callback_data = 'anlz_wst')


inline_menu3 = InlineKeyboardMarkup(row_width=1)
check_statistic = InlineKeyboardMarkup(text='–ó–≤—ñ—Ç –∑–∞ –º—ñ—Å—è—Ü—å', callback_data = 'check_stat')

inline_menu1.insert(btn_mney)
inline_menu1.insert(btn_mney2)
inline_menu1.insert(btn_mney3)

inline_menu2.insert(week_money)
inline_menu2.insert(daily_money)
inline_menu2.insert(change_money)
inline_menu2.insert(analyze_waste)

inline_menu3.insert(check_statistic)

request = requests.get('https://ua.sinoptik.ua//–ø–æ–≥–æ–¥–∞-–ª—å–≤—ñ–≤')
html = bs(request.content, 'html.parser')

for i in html.select('#content'):
    day = i.select('.day-link')[0].text
    date = i.select('.date')[0].text
    month = i.select('.month')[0].text

request_USD = requests.get('https://www.currency.me.uk/convert/usd/uah')
soup = bs(request_USD.text, 'lxml')
curs_USD = soup.find("span", {'class' : 'mini ccyrate'}).text
curs_USD2 = ''
for h in curs_USD:
    if h.isdigit():
        curs_USD2+=h
curs_USD3 = curs_USD2[1:3]


request_EUR = requests.get('https://www.currency.me.uk/convert/eur/uah')
soup2 = bs(request_EUR.text, 'lxml')
curs_EUR = soup2.find("span", {'class':'mini ccyrate'}).text


request_BTC = requests.get('https://minfin.com.ua/ua/currency/crypto/bitcoin-uah/')
soup3 = bs(request_BTC.text, 'lxml')
curs_BTC = soup3.find('div', {'class': 'sc-18a2k5w-7 jLhBcj'}).text
curs_BTC2 = ''
for y in curs_BTC:
    if y == '.':
        break
    if y.isdigit():
        curs_BTC2+=y


@dp.message_handler(text=['üí∞–ö—É—Ä—Å –≤–∞–ª—é—Ç'])
async def money(message: types.Message):
    await message.answer('–Ø–∫—É –≤–∞–ª—é—Ç—É –≤–∏ —Ö–æ—á–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏?', reply_markup=inline_menu1)


@dp.callback_query_handler(text='btn_mney')
async def USD_print(message: types.Message):
    await bot.send_message(message.from_user.id,f'–ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞ –Ω–∞ {date} {month} ({day}): {curs_USD}')


@dp.callback_query_handler(text='btn_mney2')
async def EURO_print(message: types.Message):
    await bot.send_message(message.from_user.id, f'–ö—É—Ä—Å —î–≤—Ä–æ –Ω–∞ {date} {month} ({day}): {curs_EUR}')


@dp.callback_query_handler(text='btn_mney3')
async def USD_print(message: types.Message):
    await bot.send_message(message.from_user.id,f'–ö—É—Ä—Å –±—ñ—Ç–∫–æ—ó–Ω–∞ –Ω–∞ {date} {month} ({day}): 1 BTC = {curs_BTC2}$\n({int(curs_USD3) * int(curs_BTC2)} –≥—Ä–Ω)')


@dp.message_handler(text=['üíµ–†–æ–∑–ø–æ–¥—ñ–ª–µ–Ω–Ω—è –±—é–¥–∂–µ—Ç—É'])
async def get_user_salary(message: types.Message):
    await bot.send_message(message.from_user.id,'–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –±—é–¥–∂–µ—Ç –Ω–∞ –º—ñ—Å—è—Ü—å (—á–∏—Å–ª–æ —É –≥—Ä–∏–≤–Ω—è—Ö)')
    @dp.message_handler(lambda message: True)
    async def get_user_salary2(message: types.Message):
        global salary
        try:
            if salary == 0:
                salary+=int(message.text)
                await bot.send_message(message.from_user.id, f'–í–∞—à–∞ —Å—É–º–∞ –Ω–∞ –º—ñ—Å—è—Ü—å: {salary}–≥—Ä–Ω\n–û–±–µ—Ä—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—É –¥—ñ—é', reply_markup=inline_menu2)
        except:
            await bot.send_message(message.from_user.id, '–í–∏ –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é!')


@dp.callback_query_handler(text='week_money')
async def check_week_money(message: types.Message):
    await bot.send_message(message.from_user.id, f'–í–∞—à –±—é–¥–∂–µ—Ç –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å: {salary//4}–≥—Ä–Ω')


@dp.callback_query_handler(text='daily_money')
async def check_week_money(message: types.Message):
    await bot.send_message(message.from_user.id, f'–í–∞—à –±—é–¥–∂–µ—Ç –Ω–∞ –¥–µ–Ω—å {salary//30}–≥—Ä–Ω')


@dp.callback_query_handler(text='chng_mney')
async def check_week_money(message: types.Message):
    global salary
    await bot.send_message(message.from_user.id, '–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤—É —Å—É–º—É')
    salary = 0
    user_waste.clear()
    @dp.message_handler(lambda message: True)
    async def get_user_salary2(message: types.Message):
        global salary
        try:
            if len(message.text.split()) == 1:
                salary += int(message.text)
                await bot.send_message(message.from_user.id, f'–í–∞—à–∞ —Å—É–º–∞ - {salary}–≥—Ä–Ω', reply_markup=inline_menu2)
                print(salary)
        except:
            await bot.send_message(message.from_user.id, '–í–∏ –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é!')


@dp.callback_query_handler(text='check_stat')
async def view_stats(message: types.Message):
    global user_waste
    result = ''
    for key,item in user_waste.items():
        result+=key+' '
        result+=item
        result+='\n'
    await bot.send_message(message.from_user.id, result)


@dp.callback_query_handler(text='anlz_wst')
async def analyze_user_waste(message: types.Message, state: FSMContext):
    global user_waste
    await bot.send_message(message.from_user.id, '–í–≤–µ–¥—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é, –∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±—ñ–ª —Å—É–º—É –≤–∏—Ç—Ä–∞—Ç–∏')
    await state.set_state('get_user_info_state')


@dp.message_handler(state = 'get_user_info_state')
async def analyze_money(message: types.Message, state: FSMContext):
    global user_waste
    global salary

    try:
        user_message = message.text.split(' ')
        if salary - int(user_message[1]) >=0:
            if len(user_message) == 2:
                user_waste[user_message[0]] = user_message[1]
                salary-=int(user_message[1])
                await bot.send_message(message.from_user.id, '–í–∞—à—ñ –¥–∞–Ω–Ω—ñ –¥–æ–¥–∞–Ω—ñ –≤ –±–∞–∑—É', reply_markup=inline_menu3)
                await bot.send_message(message.from_user.id, f'–í–∞—à–∞ —Å—É–º–∞ –Ω–∞ –º—ñ—Å—è—Ü—å {salary}–≥—Ä–Ω', reply_markup=inline_menu2)
                await state.finish()
        else:
            await bot.send_message(message.from_user.id, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –≥—Ä–æ—à–µ–π!')

    except:
        await bot.send_message(message.from_user.id, '–í–∏ –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é!')


@dp.message_handler(text = ['üí∏–§—ñ–Ω–∞–Ω—Å–æ–≤–∞ –ø–æ—Ä–∞–¥–∞'])
async def cmd_help(message: types.Message):
    try:
        rand_advice = r.choice(invest_advices)
        await message.answer(rand_advice, parse_mode='html')
        invest_advices.remove(rand_advice)
    except IndexError:
        await message.answer('–ü–æ—Ä–∞–¥–∏ –∑–∞–∫—ñ–Ω—á–∏–ª–∏—Å—åüò¢')


@dp.message_handler(commands=['start','help'])
async def cmd_start(message: types.Message):
    await message.answer_photo('https://img.freepik.com/free-vector/finance-and-financial-performance-concept-illustration_53876-40450.jpg?w=996&t=st=1693661780~exp=1693662380~hmac=7d01bb43d0bf5652585dd0026df2a7a2fc994e6122266972df8ed15b967ef515')
    await message.answer(START, reply_markup=kb_client, parse_mode='html')

print('–ó–∞–ø—É—â–µ–Ω–æ')

async def set_default_commands(dp):
    await bot.set_my_commands(
        [
            types.BotCommand('start', '–ó–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞'),
            types.BotCommand('help', '/help')

        ]
    )

if __name__ == '__main__':
    executor.start_polling(dp, on_startup=set_default_commands)